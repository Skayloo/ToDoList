// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoList.Stock.Db.Context;

#nullable disable

namespace ToDoList.Stock.Db.Migrations
{
    [DbContext(typeof(StockContext))]
    [Migration("20240719121108_AllInDb")]
    partial class AllInDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int?>("Level")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("priority", (string)null);
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.ToDoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("due_date");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_completed");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("integer")
                        .HasColumnName("priority_level");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PriorityLevel");

                    b.ToTable("todo_item", (string)null);
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.UsersOfToDoItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("ToDoItemId")
                        .HasColumnType("integer")
                        .HasColumnName("todo_item_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ToDoItemId");

                    b.HasIndex("UserId");

                    b.ToTable("users_of_todo_items", (string)null);
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.ToDoItem", b =>
                {
                    b.HasOne("ToDoList.Stock.Db.Domain.Priority", "Priority")
                        .WithMany("ToDoItem")
                        .HasForeignKey("PriorityLevel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Priority");
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.UsersOfToDoItems", b =>
                {
                    b.HasOne("ToDoList.Stock.Db.Domain.ToDoItem", "ToDoItem")
                        .WithMany("UsersOfToDoItems")
                        .HasForeignKey("ToDoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDoList.Stock.Db.Domain.User", "User")
                        .WithMany("UsersOfToDoItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.Priority", b =>
                {
                    b.Navigation("ToDoItem");
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.ToDoItem", b =>
                {
                    b.Navigation("UsersOfToDoItems");
                });

            modelBuilder.Entity("ToDoList.Stock.Db.Domain.User", b =>
                {
                    b.Navigation("UsersOfToDoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
